# serverless.yaml
service: tickets-cron-job

frameworkVersion: '3'

provider:
  name: aws
  runtime: nodejs18.x
  region: us-east-1
  memorySize: 128
  timeout: 10
  architecture: arm64
  stage: ${opt:stage, 'dev'}
  deploymentBucket:
    name: tickets-cron-job-dev-deployment-bucket
    serverSideEncryption: AES256 
    blockPublicAccess: true
  # AQU√ç MAPEAMOS LAS VARIABLES AL ENTORNO DE LA LAMBDA
  environment:
    STAGE: ${self:provider.stage}
    DB_HOST: ${env:DB_HOST}
    DB_PORT: ${env:DB_PORT}
    DB_USER: ${env:DB_USER}
    DB_PASSWORD: ${env:DB_PASSWORD}
    DB_NAME: ${env:DB_NAME}
    CAMINO_INCA_USER: ${env:CAMINO_INCA_USER}
    CAMINO_INCA_SERVICE: ${env:CAMINO_INCA_SERVICE}
    CAMINO_INCA_FORMAT: ${env:CAMINO_INCA_FORMAT}
    CICD_USER: ${env:CICD_USER}
    CAMINO_INCA_SERVICE_CD: ${env:CAMINO_INCA_SERVICE_CD}
    CAMINO_INCA_SERVICE_DD: ${env:CAMINO_INCA_SERVICE_DD}
    CICD_FORMAT: ${env:CICD_FORMAT}

functions:
  ticketsJob:
    handler: src/tickets/infrastructure/bootstrap/lambda-entry.handler
    memorySize: 256
    timeout: 15
    logRetentionInDays: 1
    events:
      - schedule:
          rate: rate(15 minutes)
          enabled: true
          input:
                action: 'handleCron'
plugins:
  - serverless-esbuild

package:
  individually: true

custom:
  esbuild:
    bundle: true
    minify: false
    sourcemap: true
    exclude: 
      - '@nestjs/microservices'
      - '@nestjs/websockets'
      - 'class-validator'
      - 'class-transformer'
      - 'aws-sdk'
    target: node18
    platform: node
    concurrency: 10
    inject:
      - ./crypto-polyfill.js